{"version":3,"sources":["firebase/firebaseConfig.js","views/TableView/NewProjectBtn.js","contexts/UserContext.js","views/NewAgeProjects/NewAgeProjects.js","views/TableView/TableView.js","views/Nav/Nav.js","views/AuthGuard/AuthGuard.js","views/NewAgeProjects/Column.js","views/NewAgeProjects/NewAgeProject.js","img/logo.png","views/LandingPage/HomeView.js","views/LandingPage/Register/RegisterValue.js","views/LandingPage/Register/errors.js","views/LandingPage/Register/FormSignup.js","views/LandingPage/Register/FormSuccess.js","views/LandingPage/Register/Form.js","views/LandingPage/Register/Register.js","views/LandingPage/Login/LoginValue.js","views/LandingPage/Login/Form.js","views/LandingPage/LandingPage.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","NewProjectBtn","board","userId","useState","projectName","setProjectName","className","onSubmit","event","preventDefault","firestore","collection","add","trim","archive","favourite","createdAt","Date","now","then","ref","columnName","taskName","autoComplete","htmlFor","required","pattern","title","id","value","type","onChange","e","target","Context","createContext","UserProvider","children","user","setUser","userData","setUserData","useEffect","auth","onAuthStateChanged","doc","uid","onSnapshot","snapshot","data","Provider","useUser","useContext","NewAgeProjects","projects","setProjects","expandedProjectId","setExpandedProjectId","userUid","unsubscribe","orderBy","forEach","project","push","map","to","onClick","existingProjectId","ReactDOM","createPortal","delete","deleteProject","document","getElementById","TableView","username","signOut","TopNav","AuthGuard","cover","Column","column","allColumns","tasks","setTasks","setTaskName","expandedTaskId","setExpandedTaskId","columnId","items","item","snapshotToArrayWithId","name","checked","readOnly","placeholder","task","existingTaskId","targetColumnId","set","moveTask","disabled","deleteTask","NewAgeProject","useParams","setProject","columns","setColumns","setColumnName","docRef","unsubscribe2","deleteColumn","HomeView","src","logo","alt","RegisterValue","callback","validate","email","password","password2","values","setValues","errors","setErrors","isSubmitted","setIsSubmitted","Object","keys","length","handleChange","handleSubmit","createUserWithEmailAndPassword","cred","errorsInForm","test","FormSignup","submitForm","href","FormSuccess","Form","Register","LoginValue","setEmail","setPassword","signInWithEmailAndPassword","catch","error","alert","LandingView","setData","visibleReg","setVisibleReg","visibleFo","setVisibleFo","App","basename","process","path","exact","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.d122ff3e.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBcs9OUlswKK3ACSAUVIy3qihGGQlPJkMI',\r\n  authDomain: 'effi-d406d.firebaseapp.com',\r\n  projectId: 'effi-d406d',\r\n  storageBucket: 'effi-d406d.appspot.com',\r\n  messagingSenderId: '810856324098',\r\n  appId: '1:810856324098:web:9dc06130ba685c78501b1b',\r\n  measurementId: 'G-CCEQRXHV1Z',\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n","import './NewProjectBtn.css';\r\nimport firebase from '../../firebase/firebaseConfig';\r\nimport { useState } from 'react';\r\nimport '../../sass/main.scss';\r\n\r\nfunction NewProjectBtn({ board, userId }) {\r\n  const [projectName, setProjectName] = useState('');\r\n\r\n  const addNewProject = (event) => {\r\n    event.preventDefault();\r\n    firebase\r\n      .firestore()\r\n      .collection(`users/${userId}/projects`)\r\n      .add({\r\n        projectName: projectName.trim(),\r\n        archive: false,\r\n        favourite: false,\r\n        // createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        createdAt: Date.now(),\r\n      })\r\n      .then((ref) => {\r\n        setProjectName('');\r\n\r\n        ref\r\n          .collection('columns')\r\n          .add({\r\n            columnName: 'Todo',\r\n            createdAt: Date.now(),\r\n          })\r\n          .then((ref) => {\r\n            ref.collection('tasks').add({\r\n              taskName: 'Be awesome',\r\n              createdAt: Date.now(),\r\n            });\r\n          });\r\n\r\n        ref.collection('columns').add({\r\n          columnName: 'In Progress',\r\n          createdAt: Date.now(),\r\n        });\r\n\r\n        ref.collection('columns').add({\r\n          columnName: 'Done',\r\n          createdAt: Date.now(),\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <form\r\n        className='project__form'\r\n        onSubmit={addNewProject}\r\n        autoComplete='off'\r\n      >\r\n        <label className='project__label' htmlFor='project-name'>\r\n          New project\r\n        </label>\r\n        <input\r\n          required\r\n          pattern='^[^\\s]+(\\s+[^\\s]+)*$'\r\n          title='Give a nice and.. normal title 😉'\r\n          className='project__input'\r\n          id='project-name'\r\n          value={projectName}\r\n          type='text'\r\n          onChange={(e) => setProjectName(e.target.value)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewProjectBtn;\r\n","import { createContext, useState, useEffect, useContext } from 'react';\r\nimport firebase from 'firebase/app';\r\n\r\nconst Context = createContext(null);\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [userData, setUserData] = useState({});\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        firebase\r\n          .firestore()\r\n          .collection('users')\r\n          .doc(user.uid)\r\n          .onSnapshot((snapshot) => {\r\n            setUserData(snapshot.data());\r\n          });\r\n      }\r\n      setUser(user);\r\n    });\r\n  }, []);\r\n\r\n  const value = {\r\n    user,\r\n    userData,\r\n  };\r\n  return <Context.Provider value={value}>{children}</Context.Provider>;\r\n};\r\n\r\nexport const useUser = () => {\r\n  return useContext(Context);\r\n};\r\n","import { useUser } from '../../contexts/UserContext';\r\nimport { useState, useEffect } from 'react';\r\nimport firebase from '../../firebase/firebaseConfig';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport '../../sass/main.scss';\r\n\r\nexport const NewAgeProjects = () => {\r\n  const { user } = useUser();\r\n  const [projects, setProjects] = useState(null);\r\n  const [expandedProjectId, setExpandedProjectId] = useState('');\r\n\r\n  const userUid = user.uid;\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase\r\n      .firestore()\r\n      .collection(`users/${userUid}/projects`)\r\n      .orderBy('createdAt', 'desc')\r\n\r\n      .onSnapshot((snapshot) => {\r\n        const projects = [];\r\n\r\n        snapshot.forEach((project) => {\r\n          projects.push({ id: project.id, ...project.data() });\r\n        });\r\n        setProjects(projects);\r\n      });\r\n\r\n    return () => {\r\n      if (unsubscribe) {\r\n        unsubscribe();\r\n      }\r\n    };\r\n  }, [userUid]);\r\n\r\n  const deleteProject = (project) => {\r\n    const unsubscribe = firebase\r\n      .firestore()\r\n      .collection(`users/${userUid}/projects`)\r\n      .doc(project.id)\r\n      .delete();\r\n    return () => {\r\n      if (unsubscribe) {\r\n        unsubscribe();\r\n      }\r\n    };\r\n  };\r\n\r\n  return (\r\n    projects &&\r\n    projects.map((project) => {\r\n      return (\r\n        <div className='single-project single-row' key={project.id}>\r\n          <Link to={`/board/project/${project.id}`}>\r\n            <div>{project.projectName}</div>\r\n          </Link>\r\n          <button\r\n            className='single-project__option optionBtn'\r\n            onClick={() =>\r\n              setExpandedProjectId((existingProjectId) => {\r\n                if (existingProjectId === project.id) {\r\n                  return null;\r\n                }\r\n                return project.id;\r\n              })\r\n            }\r\n          >\r\n            ...\r\n          </button>\r\n          {expandedProjectId === project.id &&\r\n            ReactDOM.createPortal(\r\n              <>\r\n                <div className='selectContainer'>\r\n                  <button\r\n                    className='deleteBtn'\r\n                    onClick={() => deleteProject(project)}\r\n                  >\r\n                    ❌\r\n                  </button>\r\n                </div>\r\n              </>,\r\n              document.getElementById('overlay')\r\n            )}\r\n        </div>\r\n      );\r\n    })\r\n  );\r\n};\r\n","import NewProjectBtn from './NewProjectBtn';\r\nimport './NewProjectBtn.css';\r\nimport { useUser } from '../../contexts/UserContext';\r\nimport { NewAgeProjects } from '../NewAgeProjects/NewAgeProjects';\r\nimport firebase from '../../firebase/firebaseConfig';\r\n\r\nfunction TableView() {\r\n  const { user, userData } = useUser();\r\n\r\n  const logout = () => {\r\n    firebase.auth().signOut();\r\n  };\r\n  return (\r\n    <div>\r\n      <div className='board-nav'>\r\n        <h3>\r\n          Hello <span>{userData.username || 'Anonymous'}</span>\r\n        </h3>\r\n        <button className='deleteBtn' onClick={logout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <h2>Your projects:</h2>\r\n        <NewProjectBtn userId={user.uid} />\r\n        <NewAgeProjects />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableView;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nimport \"./Nav.css\";\r\n\r\nfunction TopNav() {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <ul className=\"class__list\">\r\n        <li>\r\n          <Link to=\"/\">Hello page</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/board\">To Board</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default TopNav;\r\n","import { useUser } from \"../../contexts/UserContext\";\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\nexport const AuthGuard = ({ children, cover }) => {\r\n  const { user, userData } = useUser();\r\n\r\n  return user === null ? cover : children;\r\n};\r\n\r\n// export const AuthGuard = ({ children, cover }) => {\r\n//   const { user } = useUser();\r\n//   let history = useHistory();\r\n\r\n//   if (user === null) {\r\n//     return cover;\r\n//   } else {\r\n//     history.push(\"/board\");\r\n//     return children;\r\n//   }\r\n// };\r\n","import { useUser } from '../../contexts/UserContext';\r\nimport { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport firebase from '../../firebase/firebaseConfig';\r\nimport '../../sass/main.scss';\r\n\r\nconst snapshotToArrayWithId = (snapshot) => {\r\n  const items = [];\r\n\r\n  snapshot.forEach((item) => {\r\n    items.push({ id: item.id, ...item.data() });\r\n  });\r\n  return items;\r\n};\r\n\r\nexport const Column = ({ column, project, allColumns }) => {\r\n  const { user } = useUser();\r\n  const [tasks, setTasks] = useState(null);\r\n  const [taskName, setTaskName] = useState('');\r\n  const [expandedTaskId, setExpandedTaskId] = useState('');\r\n\r\n  const userUid = user.uid;\r\n  const projectId = project.id;\r\n  const columnId = column.id;\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase\r\n      .firestore()\r\n      .collection(\r\n        `users/${userUid}/projects/${projectId}/columns/${columnId}/tasks`\r\n      )\r\n\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot((snapshot) => {\r\n        setTasks(snapshotToArrayWithId(snapshot));\r\n      });\r\n    return () => {\r\n      if (unsubscribe) {\r\n        unsubscribe();\r\n      }\r\n    };\r\n  }, [userUid, projectId, columnId]);\r\n\r\n  const addTask = (e) => {\r\n    e.preventDefault();\r\n    firebase\r\n      .firestore()\r\n      .collection(\r\n        `users/${userUid}/projects/${projectId}/columns/${columnId}/tasks`\r\n      )\r\n      .add({\r\n        taskName: taskName,\r\n        createdAt: Date.now(),\r\n      })\r\n      .then(() => setTaskName(''));\r\n  };\r\n\r\n  const moveTask = (task, targetColumnId) => {\r\n    const unsubscribe = firebase\r\n      .firestore()\r\n      .collection(\r\n        `users/${userUid}/projects/${projectId}/columns/${targetColumnId}/tasks`\r\n      )\r\n      .doc(task.id)\r\n      .set(task)\r\n      .then(() => {\r\n        firebase\r\n          .firestore()\r\n          .collection(\r\n            `users/${userUid}/projects/${projectId}/columns/${columnId}/tasks`\r\n          )\r\n          .doc(task.id)\r\n          .delete();\r\n      });\r\n    return () => {\r\n      if (unsubscribe) {\r\n        unsubscribe();\r\n      }\r\n    };\r\n  };\r\n\r\n  const deleteTask = (task) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\r\n        `users/${userUid}/projects/${projectId}/columns/${columnId}/tasks`\r\n      )\r\n      .doc(task.id)\r\n      .delete();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type='radio'\r\n        name='select'\r\n        className='list-select'\r\n        checked\r\n        readOnly\r\n        required\r\n      />\r\n      <div className='list-title'>\r\n        <span>{column.columnName}</span>\r\n      </div>\r\n      <div className='list-content task'>\r\n        <form className='task__form' onSubmit={addTask} autoComplete='off'>\r\n          <label className='task__label' htmlFor='task-name'>\r\n            New task\r\n          </label>\r\n          <input\r\n            className='task__input'\r\n            value={taskName}\r\n            type='text'\r\n            onChange={(e) => setTaskName(e.target.value)}\r\n            required\r\n            pattern='^[^\\s]+(\\s+[^\\s]+)*$'\r\n            title='Give a nice and.. normal title 😉'\r\n            placeholder='New Task...'\r\n          />\r\n        </form>\r\n        <ul>\r\n          {tasks &&\r\n            tasks.map((task) => {\r\n              return (\r\n                <li key={task.id}>\r\n                  <div className='list-row'>\r\n                    <h4>{task.taskName}</h4>\r\n                    <button\r\n                      className='optionBtn'\r\n                      onClick={() =>\r\n                        setExpandedTaskId((existingTaskId) => {\r\n                          if (existingTaskId === task.id) {\r\n                            return null;\r\n                          }\r\n                          return task.id;\r\n                        })\r\n                      }\r\n                    >\r\n                      ...\r\n                    </button>\r\n                  </div>\r\n                  {expandedTaskId === task.id &&\r\n                    ReactDOM.createPortal(\r\n                      <>\r\n                        <div className='selectContainer'>\r\n                          <span>Move to:</span>\r\n                          <select\r\n                            className='selectContainer__select'\r\n                            onChange={(event) => {\r\n                              moveTask(task, event.target.value);\r\n                            }}\r\n                            value={columnId}\r\n                          >\r\n                            {allColumns.map((column) => (\r\n                              <option\r\n                                disabled={column.id === columnId}\r\n                                key={column.id}\r\n                                value={column.id}\r\n                              >\r\n                                {column.columnName}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          <button\r\n                            className='deleteBtn'\r\n                            onClick={() => deleteTask(task)}\r\n                          >\r\n                            ❌\r\n                          </button>\r\n                        </div>\r\n                      </>,\r\n                      document.getElementById('overlay')\r\n                    )}\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useUser } from '../../contexts/UserContext';\r\nimport firebase from '../../firebase/firebaseConfig';\r\nimport { Column } from './Column';\r\nimport '../../sass/main.scss';\r\n\r\nexport const NewAgeProject = () => {\r\n  const { projectId } = useParams();\r\n  const { user } = useUser();\r\n  const [project, setProject] = useState(null);\r\n  const [columns, setColumns] = useState(null);\r\n  const [columnName, setColumnName] = useState('');\r\n\r\n  const userUid = user.uid;\r\n\r\n  useEffect(() => {\r\n    const docRef = firebase\r\n      .firestore()\r\n      .collection(`users/${userUid}/projects`)\r\n      .doc(projectId);\r\n\r\n    const unsubscribe = docRef.onSnapshot((project) => {\r\n      setProject({ id: project.id, ...project.data() });\r\n    });\r\n\r\n    const unsubscribe2 = docRef.collection('columns').onSnapshot((snapshot) => {\r\n      const columns = [];\r\n\r\n      snapshot.forEach((column) => {\r\n        columns.push({ id: column.id, ...column.data() });\r\n      });\r\n\r\n      setColumns(columns);\r\n    });\r\n    return () => {\r\n      if (unsubscribe) {\r\n        unsubscribe();\r\n      }\r\n      if (unsubscribe2) {\r\n        unsubscribe2();\r\n      }\r\n    };\r\n  }, [projectId, userUid]);\r\n\r\n  if (project === null) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  const addColumn = (e) => {\r\n    e.preventDefault();\r\n    firebase\r\n      .firestore()\r\n      .collection(`users/${userUid}/projects/${projectId}/columns`)\r\n      .add({\r\n        columnName: columnName,\r\n        createdAt: Date.now(),\r\n      })\r\n      .then(() => setColumnName(''));\r\n  };\r\n\r\n  const deleteColumn = (column) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(`users/${userUid}/projects/${projectId}/columns`)\r\n      .doc(column.id)\r\n      .delete();\r\n  };\r\n\r\n  return (\r\n    <div className='project'>\r\n      <div className='project__title--wrapper'>\r\n        <h1 className='project__title'>{project.projectName}</h1>\r\n      </div>\r\n      <form className='project__form' onSubmit={addColumn} autoComplete='off'>\r\n        <label className='project__label' htmlFor='column-name'>\r\n          Add New List\r\n        </label>\r\n        <input\r\n          required\r\n          pattern='^[^\\s]+(\\s+[^\\s]+)*$'\r\n          title='Give a nice and.. normal title 😉'\r\n          placeholder='New List...'\r\n          className='project__input'\r\n          id='column-name'\r\n          value={columnName}\r\n          type='text'\r\n          onChange={(e) => setColumnName(e.target.value)}\r\n        />\r\n      </form>\r\n      {columns &&\r\n        columns.map((column) => {\r\n          return (\r\n            <div className='list' key={column.id}>\r\n              <Column\r\n                // key={column.id}\r\n                project={project}\r\n                column={column}\r\n                allColumns={columns}\r\n              />\r\n              <button\r\n                className='deleteBtn'\r\n                onClick={() => deleteColumn(column)}\r\n              >\r\n                ❌\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.0e55d699.png\";","import \"../../sass/main.scss\";\r\nimport logo from \"../../img/logo.png\";\r\n\r\nconst HomeView = () => {\r\n  return (\r\n    <div className=\"homeView\">\r\n      <div className=\"homeView__background\"></div>\r\n      <div className=\"homeView__title\">\r\n        <img src={logo} alt=\"\" />\r\n        {/* <h2>\r\n          Welcome to <span className=\"effi\">EFFI</span>\r\n        </h2> */}\r\n        <h2>From now your tasks gonna fly! Let`s try !</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeView;\r\n","import { useState, useEffect } from 'react';\r\nimport firebase from '../../../firebase/firebaseConfig';\r\n\r\nconst RegisterValue = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      // [e.target.name]: e.target.value\r\n      [name]: value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitted(true);\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(values.email, values.password)\r\n      .then((cred) => {\r\n        firebase.firestore().collection('users').doc(cred.user.uid).set({\r\n          username: values.username,\r\n          email: values.email,\r\n        });\r\n        return cred;\r\n      })\r\n      .then((cred) => {\r\n        firebase\r\n          .firestore()\r\n          .collection(`users/${cred.user.uid}/projects`)\r\n          .add({\r\n            projectName: 'Starter project',\r\n            archive: false,\r\n            favourite: false,\r\n            createdAt: Date.now(),\r\n          })\r\n          .then((ref) => {\r\n            ref\r\n              .collection('columns')\r\n              .add({\r\n                columnName: 'Todo',\r\n                createdAt: Date.now(),\r\n              })\r\n              .then((ref) => {\r\n                ref.collection('tasks').add({\r\n                  taskName: 'Be awesome',\r\n                  createdAt: Date.now(),\r\n                });\r\n              });\r\n\r\n            ref.collection('columns').add({\r\n              columnName: 'In Progress',\r\n              createdAt: Date.now(),\r\n            });\r\n\r\n            ref.collection('columns').add({\r\n              columnName: 'Done',\r\n              createdAt: Date.now(),\r\n            });\r\n          });\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitted) {\r\n      callback();\r\n    }\r\n  }, [callback, errors, isSubmitted]);\r\n\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\nexport default RegisterValue;\r\n","export default function errorsInForm(values) {\r\n\r\n\r\n    let errors = {};\r\n    if (!values.username.trim()) {\r\n        errors.username = 'Username required';\r\n    }\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Email required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n        errors.email = 'Email address is not correct';\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'Password is required';\r\n    } else if (values.password.length < 8) {\r\n        errors.password = 'Password needs to be 8 characters or more';\r\n    }\r\n\r\n    if (!values.password2) {\r\n        errors.password2 = 'Password is required';\r\n    } else if (values.password2 !== values.password) {\r\n        errors.password2 = 'Passwords are not the same';\r\n    }\r\n    return errors;\r\n}\r\n\r\n// export default errorsInForm;","// import { react } from \"react\";\r\n\r\n// function Register() {\r\n\r\n//     event.preventDefault();\r\n//     return (\r\n//         <div>\r\n//             <form>\r\n//                 <label for=\"username\">Podaj nazwę użytkownika:</label>\r\n//                 <input type=\"email\" required />\r\n//                 <label for=\"username\">Podaj hasło:</label>\r\n\r\n//                 <input type=\"password\" id=\"pass\" name=\"password\" required />\r\n//             </form>\r\n\r\n//         </div >\r\n//     )\r\n// }\r\n// export default Register;\r\n\r\nimport React from 'react';\r\nimport RegisterValue from \"./RegisterValue\";\r\nimport errorsInForm from \"./errors\";\r\n\r\nconst FormSignup = ({ submitForm }) => {\r\n    const { handleSubmit, handleChange, values, errors } = RegisterValue(submitForm, errorsInForm);\r\n    return (\r\n        <div className=\"form-content-right\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <h2>Nice to see you!</h2>\r\n                <h3> Create your account by filling out the form below.</h3>\r\n                <div className=\"form-inputs\">\r\n                    <label htmlFor=\"username\"\r\n                        className=\"form-label\">Username\r\n                    </label>\r\n                    <input\r\n                        id=\"username\"\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        className=\"form-input\"\r\n                        placeholder=\"Please enter your username\"\r\n                        value={values.username}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.username && <p>{errors.username}</p>}\r\n\r\n                </div>\r\n\r\n                <div className=\"form-inputs\">\r\n                    <label htmlFor=\"email\"\r\n                        className=\"form-label\">Email</label>\r\n                    <input\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        className=\"form-input\"\r\n                        placeholder=\"Please enter your email\"\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.email && <p>{errors.email}</p>}\r\n                </div>\r\n                <div className=\"form-inputs\">\r\n                    <label htmlFor=\"password\"\r\n                        className=\"form-label\">Password\r\n\r\n                    </label>\r\n                    <input\r\n                        id=\"password\"\r\n                        type=\"passord\"\r\n                        name=\"password\"\r\n                        className=\"form-input\"\r\n                        placeholder=\"Please enter your password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.password && <p>{errors.password}</p>}\r\n\r\n                </div>\r\n                <div className=\"form-inputs\">\r\n                    <label htmlFor=\"password2\"\r\n                        className=\"form-label\">Confirm your password\r\n\r\n                    </label>\r\n                    <input\r\n                        id=\"password2\"\r\n                        type=\"passord\"\r\n                        name=\"password2\"\r\n                        className=\"form-input\"\r\n                        placeholder=\"Confirm your password\"\r\n                        value={values.password2}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.password2 && <p>{errors.password2}</p>}\r\n\r\n                </div>\r\n                <button className=\"form-input-btn\"\r\n                    type=\"submit\">SIGN UP</button>\r\n                <br />\r\n                <span className=\"form-input-login\">\r\n                    If you have an account press <a href=\"gosia.com\">Here</a>\r\n                </span>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormSignup;\r\n","\r\nconst FormSuccess = () => {\r\n    return (\r\n        <div className=\"form-content-right\">\r\n            <div className=\"form-success\">\r\n                <h2>Welcome to EFFI ! From now your tasks gonna fly! Let`s try !\r\n                    </h2>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default FormSuccess;\r\n","import { useState } from \"react\";\r\nimport FormSignup from \"./FormSignup\";\r\nimport FormSuccess from \"./FormSuccess\";\r\n\r\nconst Form = () => {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  function submitForm() {\r\n    setIsSubmitted(true);\r\n  }\r\n  return (\r\n    <div>\r\n      {!isSubmitted ? <FormSignup submitForm={submitForm} /> : <FormSuccess />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"./Form\";\r\n// import LoginButton from \"./LandingPage\";\r\nimport './style.css';\r\n\r\nconst Register = () => {\r\n    return (\r\n        <div>\r\n            <Form />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import { useState } from 'react';\r\nimport firebase from '../../../firebase/firebaseConfig';\r\n\r\nconst LoginValue = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((error) => {\r\n        // const errorMessage = error.message;\r\n        alert(\r\n          `Your email or password is incorrect, please check your data, ${error}`\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='form-content-right'>\r\n      <form className='form' onSubmit={handleSubmit}>\r\n        <h2>Nice to see you!</h2>\r\n        <h3> Login Here.</h3>\r\n\r\n        <div className='form-inputs'>\r\n          <label htmlFor='email' className='form-label'>\r\n            Email\r\n          </label>\r\n          <input\r\n            id='email'\r\n            type='email'\r\n            name='email'\r\n            className='form-input'\r\n            placeholder='Enter your email'\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n          />\r\n          <div className='form-inputs'>\r\n            <label htmlFor='password' className='form-label'>\r\n              Password\r\n            </label>\r\n            <input\r\n              id='password'\r\n              type='passord'\r\n              name='password'\r\n              className='form-input'\r\n              placeholder='Please enter your password'\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button className='form-input-btn' type='submit'>\r\n          SIGN IN\r\n        </button>\r\n        <br />\r\n        <span className='form-input-login'>\r\n          Forget your password ? Press<a href='gosia.com'>Here</a>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginValue;\r\n","import LoginValue from \"./LoginValue\";\r\n\r\nconst Form = () => {\r\n  return (\r\n    <div>\r\n      <LoginValue />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import \"./LandingPage.css\";\r\nimport Register from \"./Register/Register\";\r\nimport Form from \"./Login/Form\";\r\nimport { useState } from \"react\";\r\nimport logo from \"../../img/logo.png\";\r\n\r\nconst LandingView = ({ data, setData }) => {\r\n  const [visibleReg, setVisibleReg] = useState(false);\r\n  const [visibleFo, setVisibleFo] = useState(false);\r\n\r\n  return (\r\n    <div className=\"landingPage-container\">\r\n      <button\r\n        onClick={() => {\r\n          setVisibleFo(false);\r\n          setVisibleReg(!visibleReg);\r\n        }}\r\n        className=\"form__containerButtonIn btn-hover login\"\r\n      >\r\n        SIGN UP\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          setVisibleReg(false);\r\n          setVisibleFo(!visibleFo);\r\n        }}\r\n        className=\"form__containerButtonIn btn-hover login\"\r\n      >\r\n        SIGN IN\r\n      </button>\r\n      {visibleReg ? <Register data={data} setData={setData} /> : null}\r\n      {visibleFo ? <Form data={data} setData={setData} /> : null}\r\n      <img className=\"effiLogo\" src={logo} alt=\"logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingView;\r\n","import './index-reset.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  HashRouter,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from 'react-router-dom';\r\nimport TableView from './views/TableView/TableView';\r\nimport Nav from './views/Nav/Nav';\r\nimport { AuthGuard } from './views/AuthGuard/AuthGuard';\r\nimport { NewAgeProject } from './views/NewAgeProjects/NewAgeProject';\r\nimport HomeView from './views/LandingPage/HomeView';\r\nimport LandingPage from './views/LandingPage/LandingPage';\r\nimport './sass/main.scss';\r\n\r\nconst App = () => {\r\n  return (\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <AuthGuard cover={<LandingPage />}>\r\n        <Switch>\r\n          <Route path=\"/board/project/:projectId\">\r\n            <Nav />\r\n            <NewAgeProject />\r\n          </Route>\r\n          <Route path=\"/board/\">\r\n            <Nav />\r\n            <TableView />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Link to=\"/board\">\r\n              <HomeView />\r\n            </Link>\r\n          </Route>\r\n        </Switch>\r\n      </AuthGuard>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\nimport { UserProvider } from './contexts/UserContext';\r\nimport './sass/main.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UserProvider>\r\n      <App />\r\n    </UserProvider>\r\n  </React.StrictMode>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}